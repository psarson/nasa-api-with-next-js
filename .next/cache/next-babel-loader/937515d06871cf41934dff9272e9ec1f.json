{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/patricksarson/Sites/next-apod/pages/index.js\";\nimport React from \"react\";\nimport Layout from '../components/AppLayout.js';\nimport ImageComponent from '../components/Media/ImageComponent';\nimport VideoComponent from '../components/Media/VideoComponent';\nimport CounterComponent from '../components/Date/Counter';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nvar checkMediaType = function checkMediaType(props) {\n  return props.apod.media_type === 'image';\n};\n\nvar withEither = function withEither(conditionalRenderingFn, EitherComponent) {\n  return function (Component) {\n    return function (props) {\n      return conditionalRenderingFn(props) ? React.createElement(EitherComponent, _extends({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      })) : React.createElement(Component, _extends({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }));\n    };\n  };\n};\n\nvar withEitherMediaType = withEither(checkMediaType, ImageComponent);\nvar MediaComponentWithEitherType = withEitherMediaType(VideoComponent);\n\nvar Index = function Index(props) {\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, props.apod.title), React.createElement(CounterComponent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(MediaComponentWithEitherType, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, props.apod.explanation.replace(/<[/]?p>/g, '')));\n};\n\nIndex.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var res, apod;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://api.nasa.gov/planetary/apod?api_key=C7ePSBrRxQZ9K6usnq5HbgDd0sIi1zO6z5hjU3YU');\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          apod = _context.sent;\n          console.log(\"apod data fetched. title: \".concat(apod.title));\n          return _context.abrupt(\"return\", {\n            apod: apod\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;","map":{"version":3,"sources":["/Users/patricksarson/Sites/next-apod/pages/index.js"],"names":["Layout","ImageComponent","VideoComponent","CounterComponent","Link","fetch","checkMediaType","props","apod","media_type","withEither","conditionalRenderingFn","EitherComponent","Component","withEitherMediaType","MediaComponentWithEitherType","Index","title","explanation","replace","getInitialProps","res","json","console","log"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,4BAAnB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD;AAAA,SAAWA,KAAK,CAACC,IAAN,CAAWC,UAAX,KAA0B,OAArC;AAAA,CAAvB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,sBAAD,EAAyBC,eAAzB;AAAA,SAA6C,UAACC,SAAD;AAAA,WAAe,UAACN,KAAD;AAAA,aAC7EI,sBAAsB,CAACJ,KAAD,CAAtB,GACI,oBAAC,eAAD,eAAsBA,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,GAEI,oBAAC,SAAD,eAAgBA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHyE;AAAA,KAAf;AAAA,GAA7C;AAAA,CAAnB;;AAMA,IAAMO,mBAAmB,GAAGJ,UAAU,CAACJ,cAAD,EAAiBL,cAAjB,CAAtC;AACA,IAAMc,4BAA4B,GAAGD,mBAAmB,CAACZ,cAAD,CAAxD;;AAGA,IAAMc,KAAK,GAAG,SAARA,KAAQ,CAAAT,KAAK;AAAA,SACjB,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,IAAN,CAAWS,KAAhB,CADF,EAEE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,4BAAD,eAAkCV,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,KAAK,CAACC,IAAN,CAAWU,WAAX,CAAuBC,OAAvB,CAA+B,UAA/B,EAA2C,EAA3C,CAAJ,CAJF,CADiB;AAAA,CAAnB;;AASAH,KAAK,CAACI,eAAN;AAAA;AAAA;AAAA;AAAA,yBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACJf,KAAK,CAAC,sFAAD,CADD;;AAAA;AAChBgB,UAAAA,GADgB;AAAA;AAAA,iBAEHA,GAAG,CAACC,IAAJ,EAFG;;AAAA;AAEhBd,UAAAA,IAFgB;AAItBe,UAAAA,OAAO,CAACC,GAAR,qCAAyChB,IAAI,CAACS,KAA9C;AAJsB,2CAMf;AAAET,YAAAA,IAAI,EAAJA;AAAF,WANe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAWA,eAAeQ,KAAf","sourcesContent":["import Layout from '../components/AppLayout.js';  \nimport ImageComponent from '../components/Media/ImageComponent' \nimport VideoComponent from '../components/Media/VideoComponent'\nimport CounterComponent from '../components/Date/Counter';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst checkMediaType = (props) => props.apod.media_type === 'image';   \n\nconst withEither = (conditionalRenderingFn, EitherComponent) => (Component) => (props) => \n  conditionalRenderingFn(props)\n    ? <EitherComponent { ...props } />\n    : <Component { ...props } />;\n\n\nconst withEitherMediaType = withEither(checkMediaType, ImageComponent);\nconst MediaComponentWithEitherType = withEitherMediaType(VideoComponent);\n\n\nconst Index = props => (\n  <Layout>\n    <h1>{props.apod.title}</h1>\n    <CounterComponent />\n    <MediaComponentWithEitherType {...props} />\n    <p>{props.apod.explanation.replace(/<[/]?p>/g, '')}</p>\n  </Layout>  \n)\n\nIndex.getInitialProps = async function() {\n  const res = await fetch('https://api.nasa.gov/planetary/apod?api_key=C7ePSBrRxQZ9K6usnq5HbgDd0sIi1zO6z5hjU3YU')\n  const apod = await res.json()\n\n  console.log(`apod data fetched. title: ${apod.title}`)\n\n  return { apod }\n} \n\n\n\nexport default Index\n"]},"metadata":{},"sourceType":"module"}