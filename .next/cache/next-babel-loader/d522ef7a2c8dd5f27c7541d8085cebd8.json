{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/patricksarson/Sites/next-apod/components/Date/counterContext.js\";\nimport React, { useReducer } from \"react\";\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case \"increment\":\n      return _objectSpread({}, state, {\n        count: state.count + 1\n      });\n\n    case \"decrement\":\n      return _objectSpread({}, state, {\n        count: state.count - 1\n      });\n\n    default:\n      return;\n  }\n};\n\nvar initialState = {\n  count: 0\n};\nvar CounterContext = React.createContext(initialState);\n\nfunction CounterProvider(props) {\n  var _useReducer = useReducer(reducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  return React.createElement(CounterContext.Provider, {\n    value: {\n      state: state,\n      dispatch: dispatch\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, props.children);\n}\n\nexport { CounterContext, CounterProvider };","map":{"version":3,"sources":["/Users/patricksarson/Sites/next-apod/components/Date/counterContext.js"],"names":["React","useReducer","reducer","state","action","type","count","initialState","CounterContext","createContext","CounterProvider","props","dispatch","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;AAEA,IAAIC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAC/B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,+BAAYF,KAAZ;AAAmBG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAc;AAAxC;;AACF,SAAK,WAAL;AACE,+BAAYH,KAAZ;AAAmBG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAc;AAAxC;;AACF;AACE;AANJ;AAQD,CATD;;AAWA,IAAMC,YAAY,GAAG;AAAED,EAAAA,KAAK,EAAE;AAAT,CAArB;AACA,IAAME,cAAc,GAAGR,KAAK,CAACS,aAAN,CAAoBF,YAApB,CAAvB;;AAEA,SAASG,eAAT,CAAyBC,KAAzB,EAAgC;AAAA,oBACJV,UAAU,CAACC,OAAD,EAAUK,YAAV,CADN;AAAA;AAAA,MACvBJ,KADuB;AAAA,MAChBS,QADgB;;AAE/B,SACG,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAAET,MAAAA,KAAK,EAALA,KAAF;AAASS,MAAAA,QAAQ,EAARA;AAAT,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,QADT,CADH;AAKA;;AAED,SAASL,cAAT,EAAyBE,eAAzB","sourcesContent":["import React, { useReducer } from \"react\";\n\nlet reducer = (state, action) => {\n  switch (action.type) {\n    case \"increment\":\n      return { ...state, count: state.count + 1 };\n    case \"decrement\":\n      return { ...state, count: state.count - 1 };\n    default:\n      return;\n  }\n}; \n\nconst initialState = { count: 0 }\nconst CounterContext = React.createContext(initialState);\n\nfunction CounterProvider(props) { \n  const [state, dispatch] = useReducer(reducer, initialState);\n return (\n    <CounterContext.Provider value={{ state, dispatch }}>\n      {props.children}\n    </CounterContext.Provider>\n  );\n} \n\nexport { CounterContext, CounterProvider };"]},"metadata":{},"sourceType":"module"}